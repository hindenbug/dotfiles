let spf13_no_views=1
let spf13_no_backups=1
let g:spf13_bundle_groups=['general', 'neocomplcache', 'programming', 'ruby', 'python', 'javascript', 'html', 'misc']

let g:indent_guides_enable_on_vim_startup = 0
let g:neocomplcache_disable_auto_complete = 1
let g:neocomplcache_enable_at_startup = 0


"==================================================================================================
" THEME SETTINGS
"==================================================================================================
colorscheme grb256


" =================================================================================================
" Ruby stuff
" =================================================================================================
augroup myfiletypes
  " Clear old autocmds in group
  autocmd!
  " autoindent with two spaces, always expand tabs
  autocmd FileType * set ai sw=2 sts=2 ts=2 et
  autocmd FileType python,html,xml,markdown set ai sw=4 sts=4 et
augroup END


" ==================================================================================================
" The Silver Searcher
" ==================================================================================================

if executable('ag')
  " Use ag over grep
  set grepprg=ag\ --nogroup\ --nocolor

  " Use ag in CtrlP for listing files. Lightning fast and respects .gitignore
  "let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'

  " ag is fast enough that CtrlP doesn't need to cache
  let g:ctrlp_use_caching = 0
endif

"Ack / ag (the_silver_searcher)
let g:ackprg = 'ag --nogroup --nocolor --column'


"====================================================================================================
" CUSTOM BIDINGS
"====================================================================================================

" bind L to grep word under cursor
nnoremap L :grep! "\b<C-R><C-W>\b"<CR>:cw<CR>

nmap <Leader>bi :source ~/.vimrc<cr>:BundleInstall<cr>
map <Leader>gs :Gstatus<CR>
map <Leader>rs :vsp <C-r>#<cr><C-w>w
map <Leader>ss ds)i <esc>:w<cr>
map <Leader>w <C-w>w
nmap <space> i_<esc>r

"Edit another file in the same directory as the current file
" uses expression to extract path from current file's path
map <Leader>e :e <C-R>=expand("%:p:h") . '/'<CR>
map <Leader>s :split <C-R>=expand("%:p:h") . '/'<CR>
map <Leader>v :vnew <C-R>=expand("%:p:h") . '/'<CR>

map <C-s> <esc>:w<CR>
imap <C-s> <esc>:w<CR>
map <C-t> <esc>:tabnew<CR>

" Emacs-like beginning and end of line.
imap <c-e> <c-o>$
imap <c-a> <c-o>^

nmap <silent> <leader>ev :e $MYVIMRC<CR>
nmap <silent> <leader>sv :so $MYVIMRC<CR>

command! Q q " Bind :Q to :q
command! Qall qall

" Disable Ex mode
map Q <Nop>

" Better? completion on command line
set wildmenu
" What to do when I press 'wildchar'. Worth tweaking to see what feels right.
set wildmode=list:full

" Let's be reasonable, shall we?
nmap k gk
nmap j gj


" Jump to the next row on long lines
map <Down> gj
map <Up>   gk
nnoremap j gj
nnoremap k gk

" format the entire file
nmap <leader>fef ggVG=

" Open new buffers
nmap <leader>s<left>   :leftabove  vnew<cr>
nmap <leader>s<right>  :rightbelow vnew<cr>
nmap <leader>s<up>     :leftabove  new<cr>
nmap <leader>s<down>   :rightbelow new<cr>

" Tab between buffers
noremap <tab> <c-w><c-w>

" Switch between last two buffers
nnoremap <leader><leader> <C-^>

nnoremap <leader>e :e <C-R>=expand("%:p:h") . "/" <CR>

inoremap <C-s> <esc>:w<cr>a
nnoremap <C-s> :w<cr>a

"==================================================================================================
" FORMATTING
"==================================================================================================

" Remove trailing whitespace on save for ruby files.
au BufWritePre *.rb :%s/\s\+$//e

"Format xml files
au FileType xml exe ":silent 1,$!xmllint --format --recover - 2>/dev/null"

" When loading text files, wrap them and don't split up words.
au BufNewFile,BufRead *.txt setlocal wrap
au BufNewFile,BufRead *.txt setlocal lbr

" Turn on spell-checking in markdown and text.
au BufRead,BufNewFile *.md,*.txt setlocal spell

" Automatic formatting
autocmd BufWritePre *.rb :%s/\s\+$//e
autocmd BufWritePre *.haml :%s/\s\+$//e
"autocmd BufWritePre *.html :%s/\s\+$//e
autocmd BufWritePre *.scss :%s/\s\+$//e
"autocmd BufWritePre *.slim :%s/\s\+$//e

au BufNewFile * set noeol

" No show command
autocmd VimEnter * set nosc

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" RENAME CURRENT FILE (thanks Gary Bernhardt)
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
function! RenameFile()
  let old_name = expand('%')
  let new_name = input('New file name: ', expand('%'), 'file')
  if new_name != '' && new_name != old_name
    exec ':saveas ' . new_name
    exec ':silent !rm ' . old_name
    redraw!
  endif
endfunction
map <Leader>n :call RenameFile()<cr>



"==================================================================================================
" UNBUNDLE STUFF
"==================================================================================================
UnBundle 'spf13/vim-autoclose'
UnBundle 'spf13/PIV'
UnBundle 'arnaud-lb/vim-php-namespace'
UnBundle 'derekwyatt/vim-sbt'
UnBundle 'derekwyatt/vim-scala'

"Haskell
UnBundle 'travitch/hasksyn'
UnBundle 'dag/vim2hs'
UnBundle 'Twinside/vim-haskellConceal'
UnBundle 'lukerandall/haskellmode-vim'
UnBundle 'ujihisa/neco-ghc'
UnBundle 'eagletmt/ghcmod-vim'
UnBundle 'Shougo/vimproc'
UnBundle 'adinapoli/cumino'
UnBundle 'bitc/vim-hdevtools'
UnBundle 'jnwhiteh/vim-golang'
UnBundle 'spf13/vim-gocode'

"Python
UnBundle 'klen/python-mode'
UnBundle 'python.vim'
UnBundle 'python_match.vim'
UnBundle 'pythoncomplete'
